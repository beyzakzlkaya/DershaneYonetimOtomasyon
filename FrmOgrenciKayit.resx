<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="label1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAA
        sQAAALEBxi1JjQAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAASYSURBVEhLjZZ7
        TFNXHMcbs7Bl2R8u2xJNXDaTLdlwgTnnyGDQW6oIDALYlqc8GsIG8pbCKsyBsDHkKQGNBOThdJpI6eSN
        ouWhYwRhLhEYSNG4zMnmNhcntOW235376KWFkvFLvv/cc+7nc8753d5b0UYKd6nnSF7HnGQX5r1fwx2/
        Z99wK3bevrtgdPsHhVPO3uWNb0kqxfz0jdW+kBzlnuDs2bA41ePTJ+Mt93/wB/QUH7HZ1SvXtM0lF2+6
        F4MImFicJWWh/O3rF7O6pOTU4VfJzdtc8vA2VcoCXPaW4my9khU0nojGRJ0atCYN/3YdtRguVxoW2qtm
        d0grh3iM48IM9fLipGT4PSoXteo8nDyciwOxxSgvKEK+uohIyqC/HoiUtGQ81WQRQSpMvWUwXq5is1dW
        OsKj1hampS+R1d0pzE/AjRPM6lKx3JYh3MykofQLXGiMha4+CnRbGj9eKYxPadIfk15t5pErBR31DOYp
        HbP9hKRU3D+XzQporUq4mclQyxFoWqJh6Q1hj2dZm2k3Tl9LAeH0AKJNPJorAk7kmkehojAeprZMbvsd
        n9sBFroLcF0bDkxJCTyDlRj7VnZguaXgHoJ5cTSPJvAHgc+Tiw+sAkurjN0+e0SdBXYC07WvYNYdYOfR
        PencInq+5sb7jwFz3pxAT93DpMKJE8xTciuciWUggF8ds4Mj9gJdPizjQdy8W/vZHtDaLDJWAXosTmCw
        mRP7cYI5yRn7AbK6Dk6wfEltJ1j+PkuYR3coYG5UEgGZ254Bc38sMCNZ4eipU5xAT922uciGvnqQE5Be
        2ArogTgsxgTi0WY5/toiB308EvSFRHaupZj0JkAOlHwM3JASjniUF4j/XC3Azz7CMVn7YDhThAWnUDwU
        ydksbJLjqSsBqkiUMkBCGmyb6BATPPdvZQTGNQIS+lwC6O8OkYanw6TJw+LRJAH+z1Y5zB6rgA4TepY5
        ot9swdODwbhUnQxzXRQb6xHQrakYdkvG3VciBcBodjmGauswVFOHXz5RCddNuwTJr6TJ1MDTaSm+aUiA
        T0QJnKXl2CGtQIs6B+aGGAJPYQV9hw7DK6wJ3qGN+DLyOBLbHkLWtoSsYaOQps4hGPxi8LsT2aE7K7CI
        8gpyet7ZU2F9Iwp517caqs+OobY0H+lhFfgovFlInOYPBF1cYpOiM6yRMALajRUsiTxk1f5WqCuB7g46
        BXfFaTugbcLzrwpwJp03jej9yWQnmVVmWmhfWRPpgYx9knb6Vj3a6V/jELg6n56/LcDbCXzwpgHjsya0
        z9KCoP3Hb8dYsLXeD6ihPlTUGx0BVyfh/BQLD2FWP84JJoige25FUDwyX8SjV8ojvDneM7zJIdQ2EWUD
        wg6YdBFJ94T9EamGTW481r68IprUnhH/I4lsRpT2b0EQrFmCnDxNGYNCs7t5nOOKSK6O3Rdbb3YI5+OT
        2GonYaLQLiGp3ziiHsaLPGr9Il+lLeRHV0vyxPZHaBuz3hudY7WG7Csz95RdT67E9RgO8rdvvDBJvcC+
        zuco8jGmLpLXSh//9i1hXsfMHwR+6jolEv0HGrkJ3nRACOEAAAAASUVORK5CYII=
</value>
  </data>
</root>